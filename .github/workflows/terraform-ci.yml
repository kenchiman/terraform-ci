name: Terraform test
 
on:
  workflow_dispatch:
    inputs:
      resource_group:
      evhns:

jobs:
  terraform:
    permissions:
      contents: read
      id-token: write
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get Position
      run: pwd
      
    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          apk add curl
          IP=$(curl ifconfig.io)
          az eventhubs namespace network-rule-set ip-rule add \
          --resource-group "${{ github.event.inputs.resource_group }}" \
          --namespace-name "${{ github.event.inputs.evhns }}" \
          --ip-rule ip-address=${IP}/32 action=Allow

    - name: Get Position
      shell: pwd && ls -la && cd .. && ls -la
      
    - name: Get Terraform Version
      id: terrform-version
      uses: bigwheel/get-terraform-version-action@v1.2.0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ steps.terrform-version.outputs.terraform-version }}

    - run: terraform init
    - id: plan
      run: terraform plan -no-color
